{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/how-to-make-a-cli-application-in-go","result":{"data":{"markdownRemark":{"excerpt":"CLI or Command Line Interfacec is a kind of programm that user interacts with entirely through a terminal and shell. In this article we wantâ€¦","html":"<p>CLI or Command Line Interfacec is a kind of programm that user interacts with entirely through a terminal and shell.</p>\n<p>In this article we want to go through a simple CLI appliication written in golang.</p>\n<h3 id=\"Install-go\" style=\"position:relative;\"><a href=\"#Install-go\" aria-label=\"Install go permalink\" class=\"gatsby-remark-autolink before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install go</h3>\n<h4 id=\"Linux\" style=\"position:relative;\"><a href=\"#Linux\" aria-label=\"Linux permalink\" class=\"gatsby-remark-autolink before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Linux</h4>\n<p>download the latest version of the source code <a href=\"https://go.dev/dl/go1.18.3.linux-amd64.tar.gz\">here</a></p>\n<p>unarchive the source</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">tar</span> -C /usr/local -xzf go1.18.3.linux-amd64.tar.gz</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Add /usr/local/go/bin into the PATH environment variable</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token environment constant\">$PATH</span>:/usr/local/go/bin</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Verify the go installation by executing following command</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">go --version</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h4 id=\"Mac\" style=\"position:relative;\"><a href=\"#Mac\" aria-label=\"Mac permalink\" class=\"gatsby-remark-autolink before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mac</h4>\n<p>Open the package file you downloaded and follow the prompts to install Go</p>\n<p>The package installs the Go distribution to /usr/local/go. The package should put the /usr/local/go/bin directory in your <code class=\"language-text\">PATH</code> environment variable. You may need to restart any open Terminal sessions for the change to take effect.</p>\n<p>Verify the go installation by executing following command</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">go --version</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h4 id=\"Windows\" style=\"position:relative;\"><a href=\"#Windows\" aria-label=\"Windows permalink\" class=\"gatsby-remark-autolink before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Windows</h4>\n<p>Open the MSI file you downloaded and follow the prompts to install Go</p>\n<p>Verify that you've installed Go</p>\n<ol>\n<li>In <strong>Windows</strong>, click the <strong>Start</strong> menu.</li>\n<li>In the menu's search box, type <code class=\"language-text\">cmd</code>, then press the <strong>Enter</strong> key.</li>\n<li>In the Command Prompt window that appears, type the following command</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">go version</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<hr>\n<p>To initialize a go project we need to execute such a command</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">go mod init <span class=\"token punctuation\">{</span>main_package_name<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>The first statement in a Go source file must be <code class=\"language-text\">package name</code>. Executable commands must always use <code class=\"language-text\">package main</code></p>\n<p>then we need to create the main file (where we will have the entry point of our program)</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, world.\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>you can install and build the programm with the go tool</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">go</span> install <span class=\"token punctuation\">{</span>main_package_name<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>this command builds an executable file with the same name as our main source file.</p>\n<p>If <code class=\"language-text\">GOBIN</code> environment variable is set, binaries are installed to the <code class=\"language-text\">bin</code> subdirectory of the first directory in the <code class=\"language-text\">GOPATH</code> list., Otherwise, binaries will be installed to the bin subdirectory of the default <code class=\"language-text\">GOPATH</code> (<code class=\"language-text\">$HOME/go` or `%USERPROFILE%\\go</code>)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">go <span class=\"token function\">env</span> -w <span class=\"token assign-left variable\">GOBIN</span><span class=\"token operator\">=</span>/some_directory/bin</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>To unset a variable previously set by <code class=\"language-text\">go env -w</code>, use <code class=\"language-text\">go env -u</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">go <span class=\"token function\">env</span> -u GOBIN</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<hr>\n<p>Fo the purpose of our CLI application we use a commander library called <a href=\"%5BGitHub%20-%20spf13/cobra:%20A%20Commander%20for%20modern%20Go%20CLI%20interactions%5D(https://github.com/spf13/cobra)\">Cobra</a>.</p>\n<p>Execute the following command to install the latest version of cobra</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">go get -u github.com/spf13/cobra@latest</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>next, insclue Cobra in your application</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"github.com/spf13/cobra\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"github.com/spf13/cobra\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, world.\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>A command line application needs a global command that represents the base command called without any subcommand. Thus we need to define this variable inside our main file as below.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">var</span> mainCommand<span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>cobra<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">{</span>\n    Use<span class=\"token punctuation\">:</span> <span class=\"token string\">\"main\"</span><span class=\"token punctuation\">,</span>\n    Short<span class=\"token punctuation\">:</span> <span class=\"token string\">\"welcome to my first commandline application\"</span><span class=\"token punctuation\">,</span>\n    Long<span class=\"token punctuation\">:</span><span class=\"token string\">\" this is a long description about the application\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>To have a functionality for a command we need to call a function inside the command struct instantiation as follow</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">var</span> mainCommand<span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>cobra<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">{</span>\n    Use<span class=\"token punctuation\">:</span> <span class=\"token string\">\"main\"</span><span class=\"token punctuation\">,</span>\n    Short<span class=\"token punctuation\">:</span> <span class=\"token string\">\"welcome to my first commandline application\"</span><span class=\"token punctuation\">,</span>\n    Long<span class=\"token punctuation\">:</span><span class=\"token string\">\" this is a long description about the application\"</span><span class=\"token punctuation\">,</span>\n\n    Run<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>cmd <span class=\"token operator\">*</span>cobra<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">,</span> args <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>We have an Init function that holds the definition of the flags and configuration settings .Cobra supports persistent flags which if we define them here then they will be global for our application.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\">mainCommand<span class=\"token punctuation\">.</span><span class=\"token function\">PersistentFlags</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">StringVar</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>cfgFile<span class=\"token punctuation\">,</span> <span class=\"token string\">\"config\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"config file (default is $HOME/.main.yaml)\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Cobra also supports local flags that only run when the action is called directly.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\">rootCmd<span class=\"token punctuation\">.</span><span class=\"token function\">Flags</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">BoolP</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toggle\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"t\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Help message for toggle\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tmainCommand<span class=\"token punctuation\">.</span><span class=\"token function\">PersistentFlags</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">StringVar</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>cfgFile<span class=\"token punctuation\">,</span> <span class=\"token string\">\"config\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"config file (default is $HOME/.main.yaml)\"</span><span class=\"token punctuation\">)</span>\n\tmainCommand<span class=\"token punctuation\">.</span><span class=\"token function\">Flags</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">BoolP</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toggle\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"t\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Help message for toggle\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>We need a function in our main file called <strong>Execute()</strong> to add all child commands to the root command and set flags appropriately,</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">Execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\terr <span class=\"token operator\">:=</span> mainCommand<span class=\"token punctuation\">.</span><span class=\"token function\">Execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\tos<span class=\"token punctuation\">.</span><span class=\"token function\">Exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>let put all together</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">package</span> cmd\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\t<span class=\"token string\">\"os\"</span>\n\n\t<span class=\"token string\">\"github.com/spf13/cobra\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//======================================================================</span>\n\n<span class=\"token keyword\">var</span> mainCommand <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>cobra<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">{</span>\n\tUse<span class=\"token punctuation\">:</span> <span class=\"token string\">\"main\"</span><span class=\"token punctuation\">,</span>\n    Short<span class=\"token punctuation\">:</span> <span class=\"token string\">\"welcome to my first commandline application\"</span><span class=\"token punctuation\">,</span>\n    Long<span class=\"token punctuation\">:</span><span class=\"token string\">\" this is a long description about the application\"</span><span class=\"token punctuation\">,</span>\n\tRun<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>cmd <span class=\"token operator\">*</span>cobra<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">,</span> args <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//=====================================================================</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">Execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\terr <span class=\"token operator\">:=</span> mainCommand<span class=\"token punctuation\">.</span><span class=\"token function\">Execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\tos<span class=\"token punctuation\">.</span><span class=\"token function\">Exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//=====================================================================</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tmainCommand<span class=\"token punctuation\">.</span><span class=\"token function\">Flags</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">BoolP</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toggle\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"t\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Help message for toggle\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>if we run the application we should see such a result</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">moeid:~/$ go run main.go -h\n this is a long description about the application\n\nUsage:\n  main <span class=\"token punctuation\">[</span>flags<span class=\"token punctuation\">]</span>\n\nFlags:\n  -h, --help     <span class=\"token builtin class-name\">help</span> <span class=\"token keyword\">for</span> main\n  -t, --toggle   Help message <span class=\"token keyword\">for</span> toggle</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Lets add a command with a flag to our commandline application</p>\n<p>to add a command we need make an instantiation from the command struct at first as follow</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">var</span> PrintHello <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>cobra<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">{</span>\n\tUse<span class=\"token punctuation\">:</span>   <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span>\n\tShort<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Prints a hello sentence\"</span><span class=\"token punctuation\">,</span>\n\tLong<span class=\"token punctuation\">:</span>  <span class=\"token string\">`This command takes a name as an argument and prints a hello {name}`</span><span class=\"token punctuation\">,</span>\n\tRun<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>cmd <span class=\"token operator\">*</span>cobra<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">,</span> args <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>now we need to add it to the mainCommand</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">Execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tmainCommand<span class=\"token punctuation\">.</span><span class=\"token function\">AddCommand</span><span class=\"token punctuation\">(</span>PrintHello<span class=\"token punctuation\">)</span>\n\terr <span class=\"token operator\">:=</span> mainCommand<span class=\"token punctuation\">.</span><span class=\"token function\">Execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\tos<span class=\"token punctuation\">.</span><span class=\"token function\">Exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>now if we run the application we will see that the command is added</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">moeid:~/$ go run main.go -h\nthis is a long description about the application\n\nUsage:\n  main <span class=\"token punctuation\">[</span>flags<span class=\"token punctuation\">]</span>\n  main <span class=\"token punctuation\">[</span>command<span class=\"token punctuation\">]</span>\n\nAvailable Commands:\n  completion  Generate the autocompletion script <span class=\"token keyword\">for</span> the specified shell\n  hello       Prints a hello sentence\n  <span class=\"token builtin class-name\">help</span>        Help about any <span class=\"token builtin class-name\">command</span>\n\nFlags:\n  -h, --help     <span class=\"token builtin class-name\">help</span> <span class=\"token keyword\">for</span> main\n  -t, --toggle   Help message <span class=\"token keyword\">for</span> toggle\n\nUse <span class=\"token string\">\"main [command] --help\"</span> <span class=\"token keyword\">for</span> <span class=\"token function\">more</span> information about a command.</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Now we need to add the argument to our <strong>hello</strong> command</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">var</span> PrintHello <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>cobra<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">{</span>\n\tUse<span class=\"token punctuation\">:</span>   <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span>\n\tShort<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Prints a hello sentence\"</span><span class=\"token punctuation\">,</span>\n\tLong<span class=\"token punctuation\">:</span>  <span class=\"token string\">`This command takes a name as an argument and prints a hello {name}`</span><span class=\"token punctuation\">,</span>\n\tRun<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>cmd <span class=\"token operator\">*</span>cobra<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">,</span> args <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tname<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> cmd<span class=\"token punctuation\">.</span><span class=\"token function\">Flags</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">GetString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello:\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">Execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tmainCommand<span class=\"token punctuation\">.</span><span class=\"token function\">AddCommand</span><span class=\"token punctuation\">(</span>PrintHello<span class=\"token punctuation\">)</span>\n\tPrintHello<span class=\"token punctuation\">.</span><span class=\"token function\">PersistentFlags</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"unknown\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name of the user to say hello to\"</span><span class=\"token punctuation\">)</span>\n\terr <span class=\"token operator\">:=</span> mainCommand<span class=\"token punctuation\">.</span><span class=\"token function\">Execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\tos<span class=\"token punctuation\">.</span><span class=\"token function\">Exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Now if we run the application again with <strong>hello</strong> and provide the name argument we should see such a result printed on the terminal</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">moeid:~/$ go run main.go hello --name moeid\nhello: moeid</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Put it all together</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token keyword\">package</span> cmd\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\t<span class=\"token string\">\"os\"</span>\n\n\t<span class=\"token string\">\"github.com/spf13/cobra\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//======================================================================</span>\n\n<span class=\"token keyword\">var</span> mainCommand <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>cobra<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">{</span>\n\tUse<span class=\"token punctuation\">:</span>   <span class=\"token string\">\"main\"</span><span class=\"token punctuation\">,</span>\n\tShort<span class=\"token punctuation\">:</span> <span class=\"token string\">\"welcome to my first commandline application\"</span><span class=\"token punctuation\">,</span>\n\tLong<span class=\"token punctuation\">:</span>  <span class=\"token string\">\" this is a long description about the application\"</span><span class=\"token punctuation\">,</span>\n\tRun<span class=\"token punctuation\">:</span>   <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>cmd <span class=\"token operator\">*</span>cobra<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">,</span> args <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> PrintHello <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>cobra<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">{</span>\n\tUse<span class=\"token punctuation\">:</span>   <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span>\n\tShort<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Prints a hello sentence\"</span><span class=\"token punctuation\">,</span>\n\tLong<span class=\"token punctuation\">:</span>  <span class=\"token string\">`This command takes a name as an argument and prints a hello {name}`</span><span class=\"token punctuation\">,</span>\n\tRun<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>cmd <span class=\"token operator\">*</span>cobra<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">,</span> args <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tname<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> cmd<span class=\"token punctuation\">.</span><span class=\"token function\">Flags</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">GetString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello:\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//=====================================================================</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">Execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tmainCommand<span class=\"token punctuation\">.</span><span class=\"token function\">AddCommand</span><span class=\"token punctuation\">(</span>PrintHello<span class=\"token punctuation\">)</span>\n\tPrintHello<span class=\"token punctuation\">.</span><span class=\"token function\">PersistentFlags</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"unknown\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name of the user to say hello to\"</span><span class=\"token punctuation\">)</span>\n\terr <span class=\"token operator\">:=</span> mainCommand<span class=\"token punctuation\">.</span><span class=\"token function\">Execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\tos<span class=\"token punctuation\">.</span><span class=\"token function\">Exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//=====================================================================</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tmainCommand<span class=\"token punctuation\">.</span><span class=\"token function\">Flags</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">BoolP</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toggle\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"t\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Help message for toggle\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Please let me know if you have any comment on it ðŸ˜Ž</p>","timeToRead":6,"id":"dc52b4ba-9528-52dc-87ff-0b665934bc1f","frontmatter":{"date":"June 26, 2020","title":"How to make a CLI application in go"}}},"pageContext":{"slug":"/blog/how-to-make-a-cli-application-in-go"}},"staticQueryHashes":["1033876704","3435786681","550521386"]}