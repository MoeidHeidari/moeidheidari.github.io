{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/how-to-redirect-traffic-from-external-ip-to-the-specific-kind-kubernetes-in-docker-cluster-with-i-ptables-dnat","result":{"data":{"markdownRemark":{"excerpt":"How to redirect traffic from external ip to the specific KIND (Kubernetes in docker) cluster with IPtables (DNAT). Introduction Kind is a…","html":"<h1 id=\"How-to-redirect-traffic-from-external-ip-to-the-specific-KIND-Kubernetes-in-docker-cluster-with-IPtables-DNAT\" style=\"position:relative;\"><a href=\"#How-to-redirect-traffic-from-external-ip-to-the-specific-KIND-Kubernetes-in-docker-cluster-with-IPtables-DNAT\" aria-label=\"How to redirect traffic from external ip to the specific KIND Kubernetes in docker cluster with IPtables DNAT permalink\" class=\"gatsby-remark-autolink before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to redirect traffic from external ip to the specific KIND (Kubernetes in docker) cluster with IPtables (DNAT).</h1>\n<h3 id=\"Introduction\" style=\"position:relative;\"><a href=\"#Introduction\" aria-label=\"Introduction permalink\" class=\"gatsby-remark-autolink before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h3>\n<p>Kind is a tool to create Kubernetes clusters in Docker container nodes. Without a doubt, it is not a useful solution for a production environment but rather for a staging environment. Minikube kind is a multi-node cluster system that can bring up several worker nodes as docker containers on a single machine.\nwhen you create a cluster with KIND the control plan's IP will be the IP address of the docker container and not the local IP address of your Machine (as kind is useful when a multi-cluster system is required). So most probably you will have an external IP as the entry point to your VM. But the requests should go to the cluster immediately. Here a question comes up, How to redirect the whole traffic on a specific port to another IP address (Not another Port)? Take a look at the following figure describing the situation.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/880/1*Nc5sIzYbhEvw18MdzZeABA.png\"></p>\n<p><strong>Node:</strong> Pay attention that we don't want to have another reverse proxy on the node. We would like to have our reverse proxy as the gateway of our clusters. This is the situation when we want to preserve the client IP and avoid X-Forwarded-For: that Nginx does.\nIn this article, we want to go through the process of creating a Kind cluster and forward the traffic directly to the cluster without using X-Forwarded-For: <clientip> header value.</p>\n<h2 id=\"Create-a-Kind-Cluster\" style=\"position:relative;\"><a href=\"#Create-a-Kind-Cluster\" aria-label=\"Create a Kind Cluster permalink\" class=\"gatsby-remark-autolink before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create a Kind Cluster</h2>\n<p>To make a Kind cluster the fist step is to install the Kind <code class=\"language-text\">CLI</code> tool.</p>\n<h5 id=\"Installing-With-A-Package-Manager\" style=\"position:relative;\"><a href=\"#Installing-With-A-Package-Manager\" aria-label=\"Installing With A Package Manager permalink\" class=\"gatsby-remark-autolink before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installing With A Package Manager</h5>\n<p>On macOS via Homebrew:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> kind</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>On macOS via MacPorts:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> port selfupdate <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">sudo</span> port <span class=\"token function\">install</span> kind</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>On Windows via Chocolatey (<a href=\"https://chocolatey.org/packages/kind\">Chocolatey Software | Kind 0.15.0</a>)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">choco <span class=\"token function\">install</span> kind</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h3 id=\"Installing-From-Release-Binaries\" style=\"position:relative;\"><a href=\"#Installing-From-Release-Binaries\" aria-label=\"Installing From Release Binaries permalink\" class=\"gatsby-remark-autolink before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installing From Release Binaries</h3>\n<p>Pre-built binaries are available on Kind <a href=\"https://github.com/kubernetes-sigs/kind/releases\">releases page</a>.</p>\n<p>To install, download the binary for your platform from “Assets”, then rename it to <code class=\"language-text\">kind</code> (or perhaps <code class=\"language-text\">kind.exe</code> on Windows) and place this into your <code class=\"language-text\">$PATH</code> at your preferred binary installation directory.</p>\n<p>On Linux:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -Lo ./kind https://kind.sigs.k8s.io/dl/v0.15.0/kind-linux-amd64\n<span class=\"token function\">chmod</span> +x ./kind\n<span class=\"token function\">sudo</span> <span class=\"token function\">mv</span> ./kind /usr/local/bin/kind</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>On macOS:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token comment\"># for Intel Macs</span>\n<span class=\"token punctuation\">[</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span> -m<span class=\"token variable\">)</span></span> <span class=\"token operator\">=</span> x86_64 <span class=\"token punctuation\">]</span><span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">curl</span> -Lo ./kind https://kind.sigs.k8s.io/dl/v0.15.0/kind-darwin-amd64\n<span class=\"token comment\"># for M1 / ARM Macs</span>\n<span class=\"token punctuation\">[</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span> -m<span class=\"token variable\">)</span></span> <span class=\"token operator\">=</span> arm64 <span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">curl</span> -Lo ./kind https://kind.sigs.k8s.io/dl/v0.15.0/kind-darwin-arm64\n<span class=\"token function\">chmod</span> +x ./kind\n<span class=\"token function\">mv</span> ./kind /some-dir-in-your-<span class=\"token environment constant\">PATH</span>/kind</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>On Windows in <a href=\"https://en.wikipedia.org/wiki/PowerShell\">PowerShell</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">curl.exe -Lo kind-windows-amd64.exe https://kind.sigs.k8s.io/dl/v0.15.0/kind-windows-amd64\nMove-Item .<span class=\"token punctuation\">\\</span>kind-windows-amd64.exe c:<span class=\"token punctuation\">\\</span>some-dir-in-your-<span class=\"token environment constant\">PATH</span><span class=\"token punctuation\">\\</span>kind.exe</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h3 id=\"Installing-From-Source\" style=\"position:relative;\"><a href=\"#Installing-From-Source\" aria-label=\"Installing From Source permalink\" class=\"gatsby-remark-autolink before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installing From Source</h3>\n<p>In addition to the pre-built binary + package manager installation options listed above you can install kind from source with <code class=\"language-text\">GO111MODULE=\"on\" go get sigs.k8s.io/kind@v0.15.0</code> or clone this repo and run <code class=\"language-text\">make build</code> from the repository.</p>\n<h4 id=\"Installing-Withmake\" style=\"position:relative;\"><a href=\"#Installing-Withmake\" aria-label=\"Installing Withmake permalink\" class=\"gatsby-remark-autolink before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installing With <code class=\"language-text\">make</code><a href=\"https://kind.sigs.k8s.io/docs/user/quick-start/#installing-with-make\"></a></h4>\n<p>Using <code class=\"language-text\">make build</code> does not require installing Go and will build kind reproducibly, the binary will be in <code class=\"language-text\">bin/kind</code> inside your clone of the repo.</p>\n<p>You should only need <code class=\"language-text\">make</code> and standard userspace utilities to run this build, it will automatically obtain the correct go version with our vendored copy of <a href=\"https://github.com/travis-ci/gimme\"><code class=\"language-text\">gimmee</code></a>.</p>\n<p>You can then call <code class=\"language-text\">./bin/kind</code> to use it, or copy <code class=\"language-text\">bin/kind</code> into some directory in your system <code class=\"language-text\">PATH</code> to use it as <code class=\"language-text\">kind</code> from the command line.</p>\n<p><code class=\"language-text\">make install</code> will attempt to mimic <code class=\"language-text\">go install</code> and has the same path requirements as <code class=\"language-text\">go install</code> below.</p>\n<h4 id=\"Installing-withgo-getgo-install\" style=\"position:relative;\"><a href=\"#Installing-withgo-getgo-install\" aria-label=\"Installing withgo getgo install permalink\" class=\"gatsby-remark-autolink before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installing with <code class=\"language-text\">go get</code> / <code class=\"language-text\">go install</code></h4>\n<p>When installing with <a href=\"https://golang.org/\">Go</a> please use the latest stable Go release, ideally go1.16 or greater.</p>\n<p>For Go versions go1.17 and higher, you should use to <code class=\"language-text\">go install sigs.k8s.io/kind@v0.15.0</code> per <a href=\"https://tip.golang.org/doc/go1.17#go-get\">Go 1.17 Release Notes - The Go Programming Language</a></p>\n<p>For older versions use <code class=\"language-text\">GO111MODULE=\"on\" go get sigs.k8s.io/kind@v0.15.0</code>.</p>\n<p>For either version if you are building from a local source clone, use <code class=\"language-text\">go install .</code> from the top-level directory of the clone.</p>\n<blockquote>\n<p><strong>NOTE</strong>: <code class=\"language-text\">go get</code> should not be run from a Go <a href=\"https://github.com/golang/go/wiki/Modules\">modules</a> enabled project directory, as go get inside a modules enabled project updates dependencies / behaves differently. Try for example <code class=\"language-text\">cd $HOME</code> first.</p>\n</blockquote>\n<p><code class=\"language-text\">go get</code> / <code class=\"language-text\">go install</code> will typically put the <code class=\"language-text\">kind</code> binary inside the <code class=\"language-text\">bin</code> directory under <code class=\"language-text\">go env GOPATH</code>, see Go's <a href=\"https://golang.org/cmd/go/#hdr-Compile_and_install_packages_and_dependencies\">“Compile and install packages and dependencies”</a> for more on this. You may need to add that directory to your <code class=\"language-text\">$PATH</code> if you encounter the error <code class=\"language-text\">kind: command not found</code> after installation, you can find a guide for adding a directory to your <code class=\"language-text\">PATH</code> at <a href=\"https://gist.github.com/nex3/c395b2f8fd4b02068be37c961301caa7#file-path-md\">path.md · GitHub</a>.</p>\n<h4 id=\"Creating-a-cluster\" style=\"position:relative;\"><a href=\"#Creating-a-cluster\" aria-label=\"Creating a cluster permalink\" class=\"gatsby-remark-autolink before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating a cluster</h4>\n<p>To create a cluster we first need to have a <code class=\"language-text\">kind cluster config</code> file. below you can find an example of such a file.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-yaml line-numbers\"><code class=\"language-yaml\"><span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Cluster\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> kind.x<span class=\"token punctuation\">-</span>k8s.io/v1alpha4\n<span class=\"token key atrule\">nodes</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">role</span><span class=\"token punctuation\">:</span> control<span class=\"token punctuation\">-</span>plane\n  <span class=\"token key atrule\">kubeadmConfigPatches</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n    kind: InitConfiguration\n    nodeRegistration:\n      kubeletExtraArgs:\n        node-labels: \"ingress-ready=true\"</span>\n<span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>cluster<span class=\"token punctuation\">-</span>name<span class=\"token punctuation\">}</span>\n<span class=\"token key atrule\">networking</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">ipFamily</span><span class=\"token punctuation\">:</span> ipv4\n  <span class=\"token key atrule\">apiServerAddress</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>you desired ip address example (ip of your machine<span class=\"token punctuation\">,</span> later the certificate will be signed for this Ip address)<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>After executing <code class=\"language-text\">docker ps</code> you will see such a result</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">CONTAINER ID   IMAGE                     COMMAND                  CREATED        STATUS      PORTS                      NAMES\n9ddc41324d46   kindest/node:v1.24.0      <span class=\"token string\">\"/usr/local/bin/entr…\"</span>   <span class=\"token number\">13</span> days ago    Up <span class=\"token number\">2</span> days   <span class=\"token number\">10.1</span>.0.15:41887-<span class=\"token operator\">></span><span class=\"token number\">6443</span>/tcp  cluster-name-control-plane</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>And after running <code class=\"language-text\">kubectl get nodes -o wide</code> you should expect such a result</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">NAME                               STATUS   ROLES           AGE   VERSION   INTERNAL-IP   EXTERNAL-IP   OS-IMAGE       KERNEL-VERSION      CONTAINER-RUNTIME\ncluster-name-control-plane         Ready    control-plane   13d   v1.24.0   <span class=\"token number\">172.17</span>.0.2    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>        Ubuntu <span class=\"token number\">21.10</span>   <span class=\"token number\">5.4</span>.0-125-generic   containerd://1.6.4</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Now we have our cluster with one node up and running.\nAs you can see the IP in the Internal IP column is different from your machine's IP which shows the IP address of the cluster running inside a docker container.</p>\n<h3 id=\"Deploy-Nginx-ingress-controller\" style=\"position:relative;\"><a href=\"#Deploy-Nginx-ingress-controller\" aria-label=\"Deploy Nginx ingress controller permalink\" class=\"gatsby-remark-autolink before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deploy Nginx ingress controller</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.1/deploy/static/provider/cloud/deploy.yaml</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>After running this command you should expect the Nginx ingress controller to be up and running.</p>\n<blockquote>\n<p><strong>NOTE</strong>: The <code class=\"language-text\">ingress controller-service</code> doesn't have the Control plan IP as it's external IP address, so we need to specify it.</p>\n</blockquote>\n<p>To do so we need to specify the external IP while the clusterIP type is <code class=\"language-text\">LoadBalancer</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">type: LoadBalancer\n  externalIPs:\n    - <span class=\"token punctuation\">{</span>cluster-ip-address<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>Now our nginx is listening to the port <code class=\"language-text\">80</code> on the cluster IP. If we run the following command</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token punctuation\">{</span>cluster-ip<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>we should expect such a result as we haven't forwarded any port yet</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>html<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>head<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span><span class=\"token number\">404</span> Not Found<span class=\"token operator\">&lt;</span>/title<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>/head<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>center<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>h<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span><span class=\"token number\">404</span> Not Found<span class=\"token operator\">&lt;</span>/h<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span><span class=\"token operator\">&lt;</span>/center<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>hr<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>center<span class=\"token operator\">></span>nginx<span class=\"token operator\">&lt;</span>/center<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>/body<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>/html<span class=\"token operator\">></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>Note:</strong> pay attention that this IP is just accessible inside the VM.</p>\n<p>to make it accessible through the VM's external IP we need to do the DNAT with Ip tables.</p>\n<h4 id=\"DNAT\" style=\"position:relative;\"><a href=\"#DNAT\" aria-label=\"DNAT permalink\" class=\"gatsby-remark-autolink before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DNAT</h4>\n<p>To do the DNAT we need to choose a port first. It will be the port that we forward the traffic to the cluster through.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> iptables -t nat -A PREROUTING -p tcp --dport <span class=\"token punctuation\">{</span>port<span class=\"token punctuation\">}</span> -j DNAT --to-destination <span class=\"token punctuation\">{</span>cluster-ip<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> iptables -t nat -A PREROUTING -p tcp --dport <span class=\"token number\">80</span> -j DNAT --to-destination <span class=\"token number\">172.19</span>.0.2</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>We need to run the following command also to allow the data to return to the user.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">sudo</span>  iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>then you will see that you can access your pods inside the cluster from outside the VM using an external Ip address.</p>\n<p><strong>Note:</strong> It is also useful when you want to implement ingress for your domain names and DNS records.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">kubectl get ingress -A\nNAMESPACE   NAME              CLASS    HOSTS                    ADDRESS      PORTS   AGE\ndefault     iguana-ingress    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>   develop.dipal.ru         <span class=\"token number\">172.17</span>.0.2   <span class=\"token number\">80</span>      13d\ndefault     pyrador-ingress   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>   develop.auth.dipal.ru    <span class=\"token number\">172.17</span>.0.2   <span class=\"token number\">80</span>      13d\ndefault     zoo-ingress       <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>   develop.panel.dipal.ru   <span class=\"token number\">172.17</span>.0.2   <span class=\"token number\">80</span>      9d</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>","timeToRead":8,"id":"ebca7b00-e7d5-5964-a74e-02fb5baddf35","frontmatter":{"date":"September 11, 2022","title":"How to redirect traffic from external ip to the specific KIND (Kubernetes in docker) cluster with IPtables (DNAT)"}}},"pageContext":{"slug":"/blog/how-to-redirect-traffic-from-external-ip-to-the-specific-kind-kubernetes-in-docker-cluster-with-i-ptables-dnat"}},"staticQueryHashes":["1033876704","3435786681","550521386"]}